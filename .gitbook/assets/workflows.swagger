{
  "swagger": "2.0",
  "info": {
    "title": "workflows/v1alpha1/workflows.proto",
    "version": "v1alpha1"
  },
  "tags": [
    {
      "name": "WorkflowsService"
    }
  ],
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1alpha1/executions": {
      "get": {
        "summary": "Lists execution",
        "description": "Lists executions matching the optional filter",
        "operationId": "WorkflowsService_ListExecutions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListExecutionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "reqHdr.tid",
            "description": "tid is the unique request id.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageSize",
            "description": "page_size specifies the maximum number of results to be returned.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "description": "page_token is used to request a specific page of the list results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "description": "filter expression.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderBy",
            "description": "order_by is used to sort the fields by ascending or descending.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeRange",
            "description": "Time Range is used to filter the data by last month, last year and by default is all.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "execution"
        ]
      }
    },
    "/v1alpha1/executions/{executionId}": {
      "get": {
        "summary": "Get execution details",
        "description": "Gets execution details",
        "operationId": "WorkflowsService_GetExecution",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetExecutionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "executionId",
            "description": "execution_id is the id of execution.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "reqHdr.tid",
            "description": "tid is the unique request id.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenantId",
            "description": "tenant_id is the tenantID.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "summary",
            "description": "summary gives the execution details without the output field.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "execution"
        ]
      }
    },
    "/v1alpha1/workflows": {
      "get": {
        "summary": "List workflows",
        "description": "List workflows matching the optional filter",
        "operationId": "WorkflowsService_ListWorkflows",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListWorkflowsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "reqHdr.tid",
            "description": "tid is the unique request id.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter",
            "description": "filter expression.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "description": "page_size specifies the maximum number of results to be returned.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "description": "page_token is used to request a specific page of the list results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "isUnskript",
            "description": "is_unskript describes whether to list standard or custom workflows.",
            "in": "query",
            "required": true,
            "type": "boolean"
          }
        ],
        "tags": [
          "workflow"
        ]
      }
    },
    "/v1alpha1/workflows/{workflowId}": {
      "get": {
        "summary": "Get workflow details.",
        "description": "Get workflow details.",
        "operationId": "WorkflowsService_GetWorkflow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetWorkflowResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workflowId",
            "description": "workflow_id is the id of the requested workflow.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "reqHdr.tid",
            "description": "tid is the unique request id.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "isUnskript",
            "description": "is_unskript describes if the workflow to get is default or custom.",
            "in": "query",
            "required": true,
            "type": "boolean"
          }
        ],
        "tags": [
          "workflow"
        ]
      }
    },
    "/v1alpha1/workflows/{workflowId}/run": {
      "post": {
        "summary": "Runs workflow",
        "description": "Runs created workflow",
        "operationId": "WorkflowsService_RunWorkflow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/RunWorkflowResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workflowId",
            "description": "workflow_id is the id of the requested workflow.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "reqHdr": {
                  "$ref": "#/definitions/v1alpha1RequestHeader",
                  "description": "req_hdr is the common request header."
                },
                "tenantId": {
                  "type": "string",
                  "description": "tenant_id is the id of the tenant (is taken from token in case of http call)."
                },
                "environmentId": {
                  "type": "string",
                  "description": "environment_id is the id of environment.",
                  "required": [
                    "environment_id"
                  ]
                },
                "params": {
                  "type": "string",
                  "description": "params describes the input parameters to this particular run."
                },
                "scheduleId": {
                  "type": "string",
                  "description": "schedule_id is the id of the scheduler. A workflow can have multiple schedules (is omitted if called by user)."
                },
                "userId": {
                  "type": "string",
                  "title": "user_id is the ID of the user who ran workflow.\n(should be sent if userID cannot be retrieved from context)"
                },
                "requestId": {
                  "type": "string",
                  "description": "request_id is the id of the request.\nIs present only in case of running workflow after request approval."
                },
                "userEmail": {
                  "type": "string",
                  "title": "Email of user who scheduled workflow execution"
                }
              },
              "description": "RunWorkflowRequest is the request to run workflow.",
              "required": [
                "environmentId"
              ]
            }
          }
        ],
        "tags": [
          "workflow"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "Execution": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "id is the execution id.",
          "readOnly": true
        },
        "workflowName": {
          "type": "string",
          "description": "workflow_name is the name of the executed workflow.",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "format": "date-time",
          "description": "create_time is the time of the execution create.",
          "readOnly": true
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "start_time is the time of the execution start.",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "end_time is the time of the execution end.",
          "readOnly": true
        },
        "duration": {
          "type": "string",
          "description": "duration is the duration of the execution.",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "version is the version of the execution.",
          "readOnly": true
        },
        "executionStatus": {
          "$ref": "#/definitions/ExecutionStatus",
          "description": "execution_status is the status of the execution."
        },
        "inputs": {
          "type": "string",
          "description": "inputs describes the field input parameter schema.",
          "readOnly": true
        },
        "output": {
          "type": "string",
          "format": "byte",
          "description": "output is the execution output.",
          "readOnly": true
        },
        "executor": {
          "type": "string",
          "description": "executor is the name of executor of workflow\nit's either email of the user, name of the token, who ran execution.",
          "readOnly": true
        },
        "approver": {
          "type": "string",
          "description": "approver is the id of the user, who approved this execution.",
          "readOnly": true
        },
        "reason": {
          "type": "string",
          "description": "reason is the reason of failure (in case of lambda failure).",
          "readOnly": true
        },
        "executionType": {
          "$ref": "#/definitions/ExecutionType",
          "description": "execution_type is to identify whether it is Action or Runbook."
        }
      },
      "description": "Execution is the execution details."
    },
    "ExecutionStatus": {
      "type": "string",
      "enum": [
        "EXECUTION_STATUS_UNSPECIFIED",
        "EXECUTION_STATUS_SUCCEEDED",
        "EXECUTION_STATUS_FAILED",
        "EXECUTION_STATUS_IN_PROGRESS"
      ],
      "default": "EXECUTION_STATUS_UNSPECIFIED",
      "description": "ExecutionStatus is the execution status."
    },
    "ExecutionType": {
      "type": "string",
      "enum": [
        "EXECUTION_TYPE_UNSPECIFIED",
        "EXECUTION_TYPE_RUNBOOK",
        "EXECUTION_TYPE_ACTION"
      ],
      "default": "EXECUTION_TYPE_UNSPECIFIED",
      "description": "ExecutionType is the execution type."
    },
    "GetExecutionResponse": {
      "type": "object",
      "properties": {
        "respHdr": {
          "$ref": "#/definitions/v1alpha1ResponseHeader",
          "description": "req_hdr is the common request header."
        },
        "execution": {
          "$ref": "#/definitions/Execution",
          "description": "execution is the details of the execution."
        }
      },
      "description": "GetExecutionResponse is the response to GetExecutionRequest."
    },
    "GetWorkflowResponse": {
      "type": "object",
      "properties": {
        "respHdr": {
          "$ref": "#/definitions/v1alpha1ResponseHeader",
          "title": "resp_hdr is the common response header"
        },
        "workflow": {
          "$ref": "#/definitions/Workflow",
          "description": "workflow is the detail of a workflow."
        },
        "url": {
          "type": "string",
          "description": "url is the url to temporary file."
        }
      },
      "description": "GetWorkflowResponse is the response to get workflow request."
    },
    "ListExecutionsResponse": {
      "type": "object",
      "properties": {
        "respHdr": {
          "$ref": "#/definitions/v1alpha1ResponseHeader",
          "description": "resp_hdr is the common response header."
        },
        "execution": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Execution"
          },
          "description": "execution is the execution details."
        },
        "statusTable": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          },
          "description": "status_table is a table containing information about the total number of executions in the list and their status."
        },
        "nextPageToken": {
          "type": "string",
          "description": "next_page_token represents the pagination token to retrieve the next page of results. If the value is \"\", it means no further results for the request."
        },
        "pageCount": {
          "type": "integer",
          "format": "int32",
          "description": "page_count is the number of pages."
        },
        "aggregateTotalTable": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          },
          "description": "status_total_table is a table containing information about the total number of executions in the list and their status."
        }
      },
      "description": "ListExecutionsResponse is the response to ListExecutionsRequest."
    },
    "ListWorkflowsResponse": {
      "type": "object",
      "properties": {
        "respHdr": {
          "$ref": "#/definitions/v1alpha1ResponseHeader",
          "title": "resp_hdr is the common response header"
        },
        "workflows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Workflow"
          },
          "description": "workflows is the details of all the Workflows."
        },
        "nextPageToken": {
          "type": "string",
          "description": "next_page_token represents the pagination token to retrieve the next page of results. If the value is \"\", it means no further results for the request."
        },
        "pageCount": {
          "type": "integer",
          "format": "int32",
          "description": "page_count is the number of pages."
        },
        "totalCount": {
          "type": "integer",
          "format": "int32",
          "description": "total_count is the Total number of workflows."
        }
      },
      "description": "ListWorkflowsResponse is the paginated response to the List request."
    },
    "v1alpha1ResponseHeader": {
      "type": "object",
      "properties": {
        "tid": {
          "type": "string",
          "title": "tid is the unique response id"
        },
        "requestTid": {
          "type": "string",
          "title": "request_tid is the corresponding request tid"
        }
      },
      "title": "ResponseHeader is the common header which every response (GRPC/HTTP) should have"
    },
    "RunWorkflowResponse": {
      "type": "object",
      "properties": {
        "respHdr": {
          "$ref": "#/definitions/v1alpha1ResponseHeader",
          "description": "resp_hdr is the common response header."
        },
        "executionIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "execution_id is the id of the execution entry."
        }
      },
      "description": "RunWorkflowResponse is the response to RunWorkflowRequest."
    },
    "Workflow": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "name is the human-readable name of the workflow."
        },
        "id": {
          "type": "string",
          "description": "id is the uuid for the workflow.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "description is details about the workflow."
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "tags represent labels attached to this workflow. This will help with the search."
        },
        "currentVersion": {
          "type": "string",
          "description": "current_version indicates the current version of the workflow. It follows the semantic versioning naming."
        },
        "createTime": {
          "type": "string",
          "format": "date-time",
          "description": "create_time is the time of the workflow create.",
          "readOnly": true
        },
        "lastRun": {
          "type": "string",
          "format": "date-time",
          "description": "last_run captures the time it was last run.",
          "readOnly": true
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "description": "last_updated captures the time it was last updated.",
          "readOnly": true
        },
        "environmentId": {
          "type": "string",
          "description": "environment_id is id of environment under which workflow should be created."
        },
        "inputSchema": {
          "type": "string",
          "description": "input_schema describes the input parameter schema."
        },
        "requiresApproval": {
          "type": "boolean",
          "description": "requires_approval flag defines whether this workflow requires approval for execution."
        },
        "runningDisabled": {
          "type": "boolean",
          "description": "running_disabled flag defines whether this workflow can be run.",
          "readOnly": true
        },
        "parentId": {
          "type": "string",
          "description": "parent_id defines folder identifier."
        },
        "isFolder": {
          "type": "boolean",
          "title": "is_folder flag to determine folder or runbook",
          "readOnly": true
        },
        "path": {
          "type": "string",
          "title": "path determines the path of runbook or folder",
          "readOnly": true
        },
        "enableEnvironment": {
          "type": "boolean",
          "description": "enable_environment_selection flag defines whether this workflow requires an env paramter to be added."
        },
        "executionDisabled": {
          "type": "boolean",
          "description": "execution_disabled flag defines whether this workflow can be executed, flag is defined by user."
        }
      },
      "description": "Workflow contains details about a workflow."
    }
  },
  "externalDocs": {
    "description": "Workflows service manages the workflows",
    "url": "https://github.com/unskript/api/docs/Workflows.doc"
  }
}
